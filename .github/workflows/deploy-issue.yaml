name: Deploy automation

on:
  issues:
    types: opened
    tags:
      - deploy-automation

concurrency:
  group: update-homolog

jobs:
  setup:
    if: contains(github.event.issue.labels.*.name, 'deploy-automation')
    name: Setup
    outputs:
      branches: ${{ steps.branches.outputs.values }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup Deploy
        run: echo "Setup deploy"

      - name: Get action link
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Action link [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Checkout do repositório
        uses: actions/checkout@v2

      - name: Atualizar branches
        run: |
          git config --global user.email "robot@github.com"
          git config --global user.name "Homolog Robot"
          git fetch --all

      - name: Rebase homolog
        run: |
          set +e
          git checkout develop
          git checkout homolog
          git rebase develop

      - name: Obtém a branch a ser mergeada
        id: branches
        run: |
          values=`python3 .github/support/deploy-homolog.py "parse-branches" "${{ github.event.issue.body }}"`
          echo $values
          echo "values<<EOF" >> $GITHUB_OUTPUT
          echo "$values" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  merge-branch:
    if: contains(github.event.issue.labels.*.name, 'deploy-automation')
    name: Update Branches
    needs: [ setup ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch_name: ${{ fromJSON( needs.setup.outputs.branches ) }}
      fail-fast: true
      max-parallel: 1
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Config git
        run: |
          git config --global user.email "robot@github.com"
          git config --global user.name "Homolog Robot"
          git fetch --all

      - name: Rebase branch
        run: |
          git checkout homolog
          git checkout ${{ matrix.branch_name }}
          echo "Rebase with homolog"
          git rebase homolog

      - name: Merge branch
        run: |
          git checkout homolog
          git merge --squash ${{ matrix.branch_name }}
          if ! grep -q "${{ matrix.branch_name }}" homolog-branches; then
            echo ${{ matrix.branch_name }} >> homolog-branches
          fi
          git add homolog-branches
          git commit -m "#merge#${{ matrix.branch_name }}"

      - name: Push branch
        run: |
          git push origin homolog

  close-issue-with-success:
    if: success() && !cancelled()
    name: Close Issue
    needs: [ merge-branch ]
    runs-on: ubuntu-latest
    steps:
      - name: Close issue with success
        uses: peter-evans/close-issue@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          comment: |
            ## Finish :rocket:
            Branches updated: ${{ steps.branches.outputs.values }}
            Automation completed.

  close-issue-with-error:
    if: failure() && !cancelled()
    name: Close Issue
    needs: [ merge-branch ]
    runs-on: ubuntu-latest
    steps:
      - name: Close issue with failure
        uses: peter-evans/close-issue@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          comment: |
            ## Error :sob:
            Automation failed.
            You can view the error accessing the [action log](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).
