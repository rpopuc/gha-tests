name: Build homolog

on:
  issues:
    types: opened

concurrency:
  group: build-homolog

jobs:
  setup:
    if: contains(github.event.issue.labels.*.name, 'build-homolog')
    name: Setup
    outputs:
      branches: ${{ steps.branches.outputs.values }}
    runs-on: ubuntu-latest
    steps:
      - name: Get action link
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Action link [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

      - name: Checkout do repositório
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Obtém a branch a ser mergeada
        id: branches
        run: |
          values=`python3 .github/support/deploy-homolog.py "parse-branches" "${{ github.event.issue.body }}"`
          echo $values
          echo "values<<EOF" >> $GITHUB_OUTPUT
          echo "$values" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  merge-branch:
    if: contains(github.event.issue.labels.*.name, 'build-homolog')
    name: Build Homolog
    needs: [ setup ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch_name: ${{ fromJSON( needs.setup.outputs.branches ) }}
      fail-fast: true
      max-parallel: 1
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Atualizar branch homolog
        run: |
          git config --global user.email "robot@github.com"
          git config --global user.name "Homolog Robot"
          git fetch --all
          git checkout homolog
          lista_branches=''
          if [[ -f homolog_branches ]]; then
            lista_branches=$(cat homolog_branches)
          fi;
          git checkout develop
          git branch -D homolog
          git checkout -b homolog develop
          if ! echo "$lista_branches" | grep -qF "${{ matrix.branch_name }}"; then
            lista_branches=`echo -e "$lista_branches\n${{ matrix.branch_name }}"`
          fi
          while read -r branch; do
            git log --pretty=format:"%h" develop | grep `git log --pretty=format:"%h" -1 $branch` &> /dev/null
            if [ $? -eq 0 ]; then
              lista_branches="${lista_branches//$branch/}"
            else
              git checkout $branch
              git rebase develop
              git checkout homolog
              git merge $branch
            fi
          done <<< "$lista_branches"
          git checkout homolog
          echo $lista_branches | tr ' ' '\n' > homolog_branches
          git add .
          git commit -m "Atualizando homolog"
          git push --force origin homolog